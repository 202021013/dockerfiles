ARG BUILD_FROM="pytorch/pytorch:1.11.0-cuda11.3-cudnn8-runtime"
FROM $BUILD_FROM

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Seoul

RUN apt-get update \
    && apt-get install -y fontconfig fonts-nanum curl git tzdata locales locales-all imagemagick ffmpeg sudo software-properties-common openssh-server \
    && add-apt-repository ppa:git-core/ppa -y \
    && apt-get update \
    && apt-get -y install --no-install-recommends git \
    && apt-get autoremove -y \
    && apt-get clean -y \    
    && rm -rf /var/lib/apt/lists/*

# Set up locale
RUN localedef -v -c -i en_US -f UTF-8 en_US.UTF-8 || true
# fix sudo setrlimit(RLIMIT_CORE) error
RUN echo "Set disable_coredump false" > /etc/sudo.conf

# Add a non-root user to a container
ARG USERNAME="dev"
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && adduser --uid $USER_UID --gid $USER_GID --force-badname --disabled-password --gecos "" $USERNAME  \
    && echo "$USERNAME:$USERNAME" | chpasswd \
    && adduser $USERNAME sudo \
    && echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers \
    && echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# install dotfiles
ARG USER_FULLNAME=""
ARG USER_EMAIL=""
ARG GITHUB_USERNAME=""
ARG WORKSPACE_LOCATION="/"
ARG WORKSPACE_ROOT="/workspace"
ARG SYSTEM_HOSTNAME="dev-container"

ENV USER_FULLNAME $USER_FULLNAME
ENV USER_EMAIL $USER_EMAIL
ENV GITHUB_USERNAME $GITHUB_USERNAME
ENV WORKSPACE_LOCATION $WORKSPACE_LOCATION
ENV WORKSPACE_ROOT $WORKSPACE_ROOT
ENV SYSTEM_HOSTNAME $SYSTEM_HOSTNAME
ENV DOTFILES_APPLY_ROOTMOI=0
ENV REMOTE_CONTAINERS=1
# ENV DOTFILES_DEBUG=1

ENV PIP_DEFAULT_TIMEOUT 100
ENV DS_BUILD_FUSED_ADAM 1
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV KMP_DUPLICATE_LIB_OK TRUE

USER $USERNAME
RUN sudo rm -rf $WORKSPACE_ROOT && sudo mkdir -p $WORKSPACE_ROOT
RUN sudo chown -R $USERNAME:$USERNAME $WORKSPACE_ROOT
RUN sh -c "$(wget -qO- https://dotfiles.entelecheia.cc/install)"

# install requirements
COPY requirements-dev.txt .
RUN pip install --no-cache-dir -r requirements-dev.txt

# set workdir to user home
WORKDIR /home/$USERNAME
COPY ./scripts/devenv-entrypoint.sh ./
RUN sudo chmod 755 ./devenv-entrypoint.sh

WORKDIR $WORKSPACE_ROOT
CMD ["zsh"]
